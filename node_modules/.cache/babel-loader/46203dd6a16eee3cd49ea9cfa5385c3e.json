{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\GitHub\\\\covid-19-tracker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { MenuItem, FormControl, Select, CardContent, Card } from \"@material-ui/core\";\nimport InfoBox from \"./InfoBox\";\nimport Map from \"./Map\";\nimport Table from \"./Table\";\nimport { sortData, prettyPrintStat } from \"./util\";\nimport LineGraph from \"./LineGraph\";\nimport \"leaflet/dist/leaflet.css\";\nimport logo from \"./covid19-logo.png\";\n\nfunction App() {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState([34.80746, -40.4796]);\n  const [zoom, setZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [isLoading, setLoading] = useState(false);\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []);\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        }));\n        const sortedData = sortData(data);\n        setTableData(sortedData);\n        setMapCountries(data);\n        setCountries(countries);\n      });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async event => {\n    setLoading(true);\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n    const url = countryCode === \"worldwide\" ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`; //https://disease.sh/v3/covid-19/all\n    //https://disease.sh/v3/covid-19/countries/[countryCode]\n\n    await fetch(url).then(response => response.json()).then(data => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n      setLoading(false); // console.log([data.countryInfo.lat, data.countryInfo.long]);\n\n      countryCode === \"worldwide\" ? setMapCenter([34.80746, -40.4796]) : setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n      setZoom(4);\n    });\n    console.log(countryInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          style: {\n            width: \"300px\",\n            height: \"170px\",\n            margin: \"-40px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"app__dropdown\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            variant: \"outlined\",\n            onChange: onCountryChange,\n            value: country,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"worldwide\",\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"app__right\",\n                children: \"Worldwide\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: country.value,\n              children: country.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__stats\",\n        children: [/*#__PURE__*/_jsxDEV(InfoBox, {\n          isRed: true,\n          active: casesType === \"cases\",\n          className: \"infoBox__cases\",\n          onClick: e => setCasesType(\"cases\"),\n          title: \"Coronavirus Cases\",\n          total: prettyPrintStat(countryInfo.cases),\n          cases: prettyPrintStat(countryInfo.todayCases),\n          isloading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          active: casesType === \"recovered\",\n          className: \"infoBox__recovered\",\n          onClick: e => setCasesType(\"recovered\"),\n          title: \"Recovered\",\n          total: prettyPrintStat(countryInfo.recovered),\n          cases: prettyPrintStat(countryInfo.todayRecovered),\n          isloading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          isGrey: true,\n          active: casesType === \"deaths\",\n          className: \"infoBox__deaths\",\n          onClick: e => setCasesType(\"deaths\"),\n          title: \"Deaths\",\n          total: prettyPrintStat(countryInfo.deaths),\n          cases: prettyPrintStat(countryInfo.todayDeaths),\n          isloading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        countries: mapCountries,\n        center: mapCenter,\n        zoom: zoom,\n        casesType: casesType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"app__right\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Live Cases by Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          countries: tableData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"app__graphTitle\",\n          children: [\"Worldwide new \", casesType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LineGraph, {\n          className: \"app__graph\",\n          casesType: casesType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5x6b39jnbG9pwkXZNPsRtTBrG0U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/GitHub/covid-19-tracker/src/App.js"],"names":["React","useEffect","useState","MenuItem","FormControl","Select","CardContent","Card","InfoBox","Map","Table","sortData","prettyPrintStat","LineGraph","logo","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","tableData","setTableData","mapCenter","setMapCenter","zoom","setZoom","mapCountries","setMapCountries","casesType","setCasesType","isLoading","setLoading","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","sortedData","onCountryChange","event","countryCode","target","url","lat","long","console","log","width","height","margin","e","cases","todayCases","recovered","todayRecovered","deaths","todayDeaths"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  CardContent,\n  Card,\n} from \"@material-ui/core\";\nimport InfoBox from \"./InfoBox\";\nimport Map from \"./Map\";\nimport Table from \"./Table\";\nimport { sortData, prettyPrintStat } from \"./util\";\nimport LineGraph from \"./LineGraph\";\nimport \"leaflet/dist/leaflet.css\";\nimport logo from \"./covid19-logo.png\";\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState([34.80746, -40.4796]);\n  const [zoom, setZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }));\n\n          const sortedData = sortData(data);\n          setTableData(sortedData);\n          setMapCountries(data);\n          setCountries(countries);\n        });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async (event) => {\n    setLoading(true);\n    const countryCode = event.target.value;\n\n    setCountry(countryCode);\n\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    //https://disease.sh/v3/covid-19/all\n    //https://disease.sh/v3/covid-19/countries/[countryCode]\n\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setCountry(countryCode);\n        setCountryInfo(data);\n        setLoading(false);\n        // console.log([data.countryInfo.lat, data.countryInfo.long]);\n        countryCode === \"worldwide\"\n          ? setMapCenter([34.80746, -40.4796])\n          : setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n        setZoom(4);\n      });\n\n    console.log(countryInfo);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <img\n            src={logo}\n            style={{ width: \"300px\", height: \"170px\", margin: \"-40px\" }}\n          />\n          <FormControl className=\"app__dropdown\">\n            <Select\n              variant=\"outlined\"\n              onChange={onCountryChange}\n              value={country}\n            >\n              <MenuItem value=\"worldwide\">\n                <h5 className=\"app__right\">Worldwide</h5>\n              </MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n\n        <div className=\"app__stats\">\n          <InfoBox\n            isRed\n            active={casesType === \"cases\"}\n            className=\"infoBox__cases\"\n            onClick={(e) => setCasesType(\"cases\")}\n            title=\"Coronavirus Cases\"\n            total={prettyPrintStat(countryInfo.cases)}\n            cases={prettyPrintStat(countryInfo.todayCases)}\n            isloading={isLoading}\n          />\n          <InfoBox\n            active={casesType === \"recovered\"}\n            className=\"infoBox__recovered\"\n            onClick={(e) => setCasesType(\"recovered\")}\n            title=\"Recovered\"\n            total={prettyPrintStat(countryInfo.recovered)}\n            cases={prettyPrintStat(countryInfo.todayRecovered)}\n            isloading={isLoading}\n          />\n          <InfoBox\n            isGrey\n            active={casesType === \"deaths\"}\n            className=\"infoBox__deaths\"\n            onClick={(e) => setCasesType(\"deaths\")}\n            title=\"Deaths\"\n            total={prettyPrintStat(countryInfo.deaths)}\n            cases={prettyPrintStat(countryInfo.todayDeaths)}\n            isloading={isLoading}\n          />\n        </div>\n        {/* Map */}\n        <Map\n          countries={mapCountries}\n          center={mapCenter}\n          zoom={zoom}\n          casesType={casesType}\n        />\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <h3>Live Cases by Country</h3>\n          <Table countries={tableData} />\n          <h3 className=\"app__graphTitle\">Worldwide new {casesType}</h3>\n          <LineGraph className=\"app__graph\" casesType={casesType} />\n        </CardContent>\n        {/* Table */}\n        {/* Graph */}\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}